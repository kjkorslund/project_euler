from extensions import IntExt

# [Problem 1](https://projecteuler.net/problem=1)
# 
# If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
# The sum of these multiples is 23.
# 
# Find the sum of all the multiples of 3 or 5 below 1000.
def P1():
  sum = 0
  for i in range(1, 1000):
    i = IntExt(i)
    if i.is_multiple_of(3) or i.is_multiple_of(5):
      sum += i
  return sum

# [Problem 2](https://projecteuler.net/problem=2):
# 
# Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
# starting with 1 and 2, the first 10 terms will be:
# 
#   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
# 
# By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
# the sum of the even-valued terms.
def P2():
  def fibonacci():
    current = 1
    next = 2
    while True:
      yield current
      current, next = next, current+next
  fib_sequence = fibonacci()

  sum = 0
  n = next(fib_sequence);
  while n < 4_000_000:
    if IntExt.is_even(n): sum += n
    n = next(fib_sequence)

  return sum

# The prime factors of 13195 are 5, 7, 13 and 29.
# What is the largest prime factor of the number 600851475143?</p>
def P3():
  return IntExt.find_prime_factors(600851475143)[-1]