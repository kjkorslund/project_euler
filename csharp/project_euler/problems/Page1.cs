// Page 1 problems (P1 - P50)

using Project_euler.Extensions;

namespace Project_euler.Problems;


/**
 * [Problem 1](https://projecteuler.net/problem=1)
 * 
 * If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
 * The sum of these multiples is 23.
 * 
 * Find the sum of all the multiples of 3 or 5 below 1000.
 */
class P1 : IProblem<int>
{
  public int Solve()
  {
    int sum = 0;
    for (int i = 1; i < 1000; i++)
    {
      if (i.IsMultipleOf(3) || i.IsMultipleOf(5))
      {
        sum += i;
      }
    }
    return sum;
  }
};

/**
 * [Problem 2](https://projecteuler.net/problem=2):
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 * 
 *   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 */
class P2 : IProblem<int>
{
  public int Solve()
  {
    int sum = Fibonacci().TakeWhile(it => it <= 4_000_000)
      .Where(it => it.IsEven()).Sum();
    return sum;
  }

  IEnumerable<int> Fibonacci()
  {
    int current = 1, next = 2;
    while (true)
    {
      yield return current;
      int nextnext = current + next;
      current = next; next = nextnext;
    }
  }
}

/**
 * The prime factors of 13195 are 5, 7, 13 and 29.
 * What is the largest prime factor of the number 600851475143?</p>
 */
class P3 : IProblem<int>
{
  public int Solve()
  {
    //Console.WriteLine(string.Join(',', 13195L.FindPrimeFactors()));
    return (int)600851475143L.FindPrimeFactors().Last();
  }
}

/**
 * A palindromic number reads the same both ways. The largest palindrome made from the product of
 * two 2-digit numbers is 9009 = 91 x 99.
 * 
 * Find the largest palindrome made from the product of two 3-digit numbers.
 */
class P4 : IProblem<int>
{
  public int Solve()
  {
    int solution = 0;
    for (int i = 1; i < 1000; i++)
    {
      for (int j = i; j < 1000; j++)
      {
        var product = j * i;
        if (product > solution && product.IsPalindromic())
        {
          solution = product;
        }
      }
    }
    return solution;
  }
}

/**
 * 2520 is the smallest number that can be divided by each of the numbers from 1 to 10 without any remainder.
 * What is the smallest positive number that is evenly divisible (divisible with no remainder) by all of the numbers from 1 to 20?
 */
class P5 : IProblem<int>
{
  public int Solve()
  {
    int target = 20;
    for (int i = target; i < int.MaxValue; i += target)
    {
      if (IsFullyDivisibleUpTo(target, i))
      {
        return i;
      }
    }
    return -1;
  }

  private bool IsFullyDivisibleUpTo(int divisor, int n)
  {
    for (int d = divisor; d > 1; d--)
    {
      if (!n.IsMultipleOf(d)) return false;
    }
    return true;
  }
}
