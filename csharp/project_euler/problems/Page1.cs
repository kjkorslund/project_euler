// Page 1 problems (P1 - P50)

using Project_euler.Extensions;

namespace Project_euler.Problems;


/**
 * [Problem 1](https://projecteuler.net/problem=1)
 * 
 * If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
 * The sum of these multiples is 23.
 * 
 * Find the sum of all the multiples of 3 or 5 below 1000.
 */
class P1 : IProblem<int>
{
  public int Solve()
  {
    int sum = 0;
    for (int i = 1; i < 1000; i++)
    {
      if (i.IsMultipleOf(3) || i.IsMultipleOf(5))
      {
        sum += i;
      }
    }
    return sum;
  }
};

/**
 * [Problem 2](https://projecteuler.net/problem=2):
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 * 
 *   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 */
class P2 : IProblem<int>
{
  public int Solve()
  {
    int sum = Fibonacci().TakeWhile(it => it <= 4_000_000)
      .Where(it => it.IsEven()).Sum();
    return sum;
  }

  IEnumerable<int> Fibonacci()
  {
    int current = 1, next = 2;
    while (true)
    {
      yield return current;
      int nextnext = current + next;
      current = next; next = nextnext;
    }
  }
}
