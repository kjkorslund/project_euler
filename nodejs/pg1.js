const pg1 = {};
export default pg1;

import {Range} from "./utils.js";

/**
 * [Problem 1](https://projecteuler.net/problem=1)
 * 
 * If we list all the natural numbers below 10 that are multiples of 3 or 5, we get 3, 5, 6 and 9.
 * The sum of these multiples is 23.
 * 
 * Find the sum of all the multiples of 3 or 5 below 1000.
 */
pg1.p1 = function() {
  // Note:  zero is not considered a natural number in this problem

  let sum = 0;
  Range.open(1,1000).foreach(i => {
    if (i.isMultipleOf(3) || i.isMultipleOf(5)) {
      sum += i;
    }
  });
  console.log(sum.foobar())
  return sum;
}

/**
 * [Problem 2](https://projecteuler.net/problem=2):
 * 
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By
 * starting with 1 and 2, the first 10 terms will be:
 * 
 *   1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 * 
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find
 * the sum of the even-valued terms.
 */
pg1.p2 = function() {
  function* seqFibonacci() {
    let current=1, next=2;
    while(true) {
      yield current;
      [current, next] = [next, next + current];
    }
  }

  let sum = 0;
  const sequence = seqFibonacci();
  let term = sequence.next().value;
  while (term < 4_000_000) {
    if (term.isEven()) {
      sum += term;
    }
    term = sequence.next().value;
  }

  return sum;
}